services:

  # Service de temps (NTP)
  ntp:
    image: cturra/ntp:latest
    container_name: vch-ntp
    restart: always
    ports:
      - "123:123/udp"
    environment:
      - NTP_SERVERS=0.fr.pool.ntp.org,1.fr.pool.ntp.org,2.fr.pool.ntp.org

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # Désactive la sécurité pour simplifier
    ports:
      - "9200:9200"
    networks:
      - elk_network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - elk_network
    depends_on:
      - elasticsearch
  # Service de proxy (HTTP, WSUS, DNS)
  haproxy:
    image: haproxy:latest
    container_name: vch-proxy
    ports:
      - "8530:8530"  # Pour WSUS
      - "8080:8080"  # Pour le proxy Web
      #- "53:53/udp"  # Pour DNS
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    restart: always

  logstash:
    image: docker.elastic.co/logstash/logstash:8.7.1
    container_name: logstash
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yaml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    environment:
      - "LS_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "5044:5044"  # Pour Filebeat
      - "9600:9600"  # API de monitoring
    networks:
      - elk_network
    depends_on:
      - elasticsearch


  filebeat:
    image: docker.elastic.co/beats/filebeat:8.7.1
    container_name: filebeat    #Filebeat est un agent léger qui envoie les logs de tes containers vers Logstash.
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yaml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - elk_network
    depends_on:
      - logstash

volumes:
  proxy_logs:
  elasticsearch_data:
  grafana_data:
  ntp_data:


networks:
  proxy_network:
    driver: bridge